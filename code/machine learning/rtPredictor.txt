Step 1: Determine the actions that should be possible for the current Rt value data

Look through the Rt data, sort the changes of data into different bins, where each bin is a range of values (e.g. 0.5).
Once all values have been sorted, the top 8(?) bins (in terms of total values within them) are averaged, and this is added as an action to the potential action list.

Worthwhile note, for the sake of simplification, all negative Rt value changes will be made positive when being sorted into bins.

An example potential action list may be:
[0, 0.5, 0.25, 1, 0.1, 0.75, 1.25, 2, 2.1, -0.5, -0.25, -1, -0.1, -0.75, -1.25, -2, -2.1]
/\ |____________________________________|  |____________________________________________|
|               a)                                              b)
0 will always be in every action list
a) These are the positve bin values
b) Negative verions of the positive bin values are added to provide more options easily

Step 2: Create an agent that using those actions tries to mimic the Rt values as closely as possible

\                      /
 x      x--x    x--x--x
  \    /    \  /
   x--x       x 
   


Step 3: Break up the actions that the agent has chosen into sections, then looking at the point to the right of a section, look
        at each of the points within that section, and evalute which one had the largest impact on its decision to make its currently
        decided action. 

\   |      |      |    |    /
 x  |     x|--x   |x--x|--x
  \ |    / |   \  |/   |
   x|--x   |    x |    |

Idea 1:
        To evalute the previous points, create a list of all potential combinations of actions that could have been performed.
        Then, look through the potential combinations and determine which one had a larger impact upon how the actual value came to be.
                Look at which previous point actions ends up leading to the current point the most?

Step 4: Put all of these window predictions into a table

|Window step|Prediction|
|           |          |
|           |          |

Step 5: Use SHAP on the table to see what explanations it can determine from the data